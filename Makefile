# Makefile pour le projet HTMX

.PHONY: help install run clean test

# Variables
PYTHON = python3
VENV = venv
FLASK_APP = app.py

help: ## Afficher l'aide
	@echo "Commandes disponibles :"
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-15s\033[0m %s\n", $$1, $$2}'

install: ## Installer les dÃ©pendances
	@echo "ðŸ“¦ Installation de l'environnement..."
	$(PYTHON) -m venv $(VENV)
	./$(VENV)/bin/pip install --upgrade pip
	./$(VENV)/bin/pip install -r requirements.txt
	@echo "âœ… Installation terminÃ©e!"

run: ## DÃ©marrer l'application
	@echo "ðŸš€ DÃ©marrage de l'application..."
	./$(VENV)/bin/python $(FLASK_APP)

dev: ## DÃ©marrer en mode dÃ©veloppement
	@echo "ðŸ”§ Mode dÃ©veloppement..."
	FLASK_ENV=development FLASK_DEBUG=True ./$(VENV)/bin/python $(FLASK_APP)

clean: ## Nettoyer les fichiers temporaires
	@echo "ðŸ§¹ Nettoyage..."
	find . -type f -name "*.pyc" -delete
	find . -type d -name "__pycache__" -delete
	find . -type d -name "*.egg-info" -exec rm -rf {} +

freeze: ## GÃ©nÃ©rer requirements.txt Ã  partir de l'environnement
	./$(VENV)/bin/pip freeze > requirements.txt

setup: install ## Installation complÃ¨te du projet
	@echo "ðŸŽ‰ Projet prÃªt!"
	@echo "Utilisez 'make run' pour dÃ©marrer l'application"

check: ## VÃ©rifier la syntaxe Python
	./$(VENV)/bin/python -m py_compile $(FLASK_APP)
	@echo "âœ… Syntaxe correcte!"
